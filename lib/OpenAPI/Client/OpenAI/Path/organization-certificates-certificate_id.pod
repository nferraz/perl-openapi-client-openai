=encoding utf8

=head1 NAME

OpenAPI::Client::OpenAI::Path::organization-certificates-certificate_id - Documentation for the /organization/certificates/{certificate_id} path.

=head1 DESCRIPTION

This document describes the API endpoint at C</organization/certificates/{certificate_id}>.

=head1 PATHS


=head2 C<DELETE /organization/certificates/{certificate_id}>

Delete a certificate from the organization.

The certificate must be inactive for the organization and all projects.



=head3 Operation ID

C<deleteCertificate>

    $client->deleteCertificate( ... );

=head3 Parameters

=over 4

=back


=head3 Responses


=head4 Status Code: C<200>

Certificate deleted successfully.


=head4 Content Types:

=over 4


=item * C<application/json>

Example (See the L<OpenAI spec for more detail|https://github.com/openai/openai-openapi/blob/master/openapi.yaml>):



=back

=head2 C<GET /organization/certificates/{certificate_id}>

Get a certificate that has been uploaded to the organization.

You can get a certificate regardless of whether it is active or not.



=head3 Operation ID

C<getCertificate>

    $client->getCertificate( ... );

=head3 Parameters

=over 4

=item * C<certificate_id> (in path) (Required) - Unique ID of the certificate to retrieve.

Type: C<string>



=item * C<include> (in query) (Optional) - A list of additional fields to include in the response. Currently the only supported value is `content` to fetch the PEM content of the certificate.

Type: C<array>



=back


=head3 Responses


=head4 Status Code: C<200>

Certificate retrieved successfully.


=head4 Content Types:

=over 4


=item * C<application/json>

Example (See the L<OpenAI spec for more detail|https://github.com/openai/openai-openapi/blob/master/openapi.yaml>):

    {
      "object": "certificate",
      "id": "cert_abc",
      "name": "My Certificate",
      "created_at": 1234567,
      "certificate_details": {
        "valid_at": 1234567,
        "expires_at": 12345678,
        "content": "-----BEGIN CERTIFICATE----- MIIGAjCCA...6znFlOW+ -----END CERTIFICATE-----"
      }
    }


=back

=head2 C<POST /organization/certificates/{certificate_id}>

Modify a certificate. Note that only the name can be modified.



=head3 Operation ID

C<modifyCertificate>

    $client->modifyCertificate( ... );

=head3 Parameters

=over 4

=back

=head3 Request Body
  
=head3 Content Type: C<application/json>

    
      

      
             

=head3 Responses


=head4 Status Code: C<200>

Certificate modified successfully.


=head4 Content Types:

=over 4


=item * C<application/json>

Example (See the L<OpenAI spec for more detail|https://github.com/openai/openai-openapi/blob/master/openapi.yaml>):

    {
      "object": "certificate",
      "id": "cert_abc",
      "name": "My Certificate",
      "created_at": 1234567,
      "certificate_details": {
        "valid_at": 1234567,
        "expires_at": 12345678,
        "content": "-----BEGIN CERTIFICATE----- MIIGAjCCA...6znFlOW+ -----END CERTIFICATE-----"
      }
    }


=back

=head1 SEE ALSO

L<OpenAPI::Client::OpenAI::Path>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2023-2025 by Nelson Ferraz

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.14.0 or,
at your option, any later version of Perl 5 you may have available.

=cut