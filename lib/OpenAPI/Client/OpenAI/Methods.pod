=encoding UTF-8

=head1 NAME

OpenAPI::Client::OpenAI::Methods - Methods for OpenAI API

=head1 DESCRIPTION

Yes, this isn't perfect. But it's a start. The OpenAI API is complex and and
the L<OpenAPI::Client> module is a bit opaque at times. We'll add more later.

=head1 METHODS


=head2 addUploadPart

Adds a
L<Part|https://platform.openai.com/docs/api-reference/uploads/part-obje
ct> to an
L<Upload|https://platform.openai.com/docs/api-reference/uploads/object>
object. A Part represents a chunk of bytes from the file you are trying
to upload. 

Each Part can be at most 64 MB, and you can add Parts until you hit the
Upload maximum of 8 GB.

It is possible to add multiple Parts in parallel. You can decide the
intended order of the Parts when you L<complete the
Upload|https://platform.openai.com/docs/api-reference/uploads/complete>
.

=head3 Parameters


=head4 upload_id

The ID of the Upload.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  upload_abc123

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 admin-api-keys-create

Create an organization admin API key

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 admin-api-keys-delete

Delete an organization admin API key

=head3 Parameters


=head4 key_id


=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 admin-api-keys-get

Retrieve a single organization API key

=head3 Parameters


=head4 key_id


=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 admin-api-keys-list

List organization API keys

=head3 Parameters


=head4 after


=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order


=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  asc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 limit


=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 archive-project

Archives a project in the organization. Archived projects cannot be
used or updated.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 cancelBatch

Cancels an in-progress batch. The batch will be in status C<cancelling>
for up to 10 minutes, before changing to C<cancelled>, where it will
have partial results (if any) available in the output file.

=head3 Parameters


=head4 batch_id

The ID of the batch to cancel.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 cancelFineTuningJob

Immediately cancel a fine-tune job.

=head3 Parameters


=head4 fine_tuning_job_id

The ID of the fine-tuning job to cancel.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  ft-AF1WoRqd3aJAHsqc9NY7iL8F

=item * Enum:     N/A

=back




=head2 cancelRun

Cancels a run that is C<in_progress>.

=head3 Parameters


=head4 thread_id

The ID of the thread to which this run belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run to cancel.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 cancelUpload

Cancels the Upload. No Parts may be added after an Upload is cancelled.

=head3 Parameters


=head4 upload_id

The ID of the Upload.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  upload_abc123

=item * Enum:     N/A

=back




=head2 cancelVectorStoreFileBatch

Cancel a vector store file batch. This attempts to cancel the
processing of files in this batch as soon as possible.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the file batch belongs to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 batch_id

The ID of the file batch to cancel.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 completeUpload

Completes the
L<Upload|https://platform.openai.com/docs/api-reference/uploads/object>
. 

Within the returned Upload object, there is a nested
L<File|https://platform.openai.com/docs/api-reference/files/object>
object that is ready to use in the rest of the platform.

You can specify the order of the Parts by passing in an ordered list of
the Part IDs.

The number of bytes uploaded upon completion must match the number of
bytes initially specified when creating the Upload object. No Parts may
be added after an Upload is completed.

=head3 Parameters


=head4 upload_id

The ID of the Upload.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  upload_abc123

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 create-project

Create a new project in the organization. Projects can be created and
archived, but cannot be deleted.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 create-project-service-account

Creates a new service account in the project. This also returns an
unredacted API key for the service account.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 create-project-user

Adds a user to the project. Users must already be members of the
organization to be added to a project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 create-realtime-session

Create an ephemeral API token for use in client-side applications with
the
Realtime API. Can be configured with the same session parameters as the
C<session.update> client event.

It responds with a session object, plus a C<client_secret> key which
contains
a usable ephemeral API token that can be used to authenticate browser
clients
for the Realtime API.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createAssistant

Create an assistant with a model and instructions.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createBatch

Creates and executes a batch from an uploaded file of requests

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createChatCompletion

Creates a model response for the given chat conversation. Learn more in
the
L<text
generation|https://platform.openai.com/docs/guides/text-generation>,
L<vision|https://platform.openai.com/docs/guides/vision>,
and L<audio|https://platform.openai.com/docs/guides/audio> guides.

Parameter support can differ depending on the model used to generate
the
response, particularly for newer reasoning models. Parameters that are
only
supported for reasoning models are noted below. For the current state
of 
unsupported parameters in reasoning models, 
L<refer to the reasoning
guide|https://platform.openai.com/docs/guides/reasoning>.
=head3 Examples

See the following files in the distribution for examples:

=over 4

=item *	examples/chat.pl

=back


This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createCompletion

Creates a completion for the provided prompt and parameters.
=head3 Examples

See the following files in the distribution for examples:

=over 4

=item *	examples/translate.pl

=back


This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createEmbedding

Creates an embedding vector representing the input text.
=head3 Examples

See the following files in the distribution for examples:

=over 4

=item *	examples/get-embeddings.pl

=back


This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createFile

Upload a file that can be used across various endpoints. Individual
files can be up to 512 MB, and the size of all files uploaded by one
organization can be up to 100 GB.

The Assistants API supports files up to 2 million tokens and of
specific file types. See the L<Assistants Tools
guide|https://platform.openai.com/docs/assistants/tools> for details.

The Fine-tuning API only supports C<.jsonl> files. The input also has
certain required formats for fine-tuning
L<chat|https://platform.openai.com/docs/api-reference/fine-tuning/chat-
input> or
L<completions|https://platform.openai.com/docs/api-reference/fine-tunin
g/completions-input> models.

The Batch API only supports C<.jsonl> files up to 200 MB in size. The
input also has a specific required
L<format|https://platform.openai.com/docs/api-reference/batch/request-i
nput>.

Please L<contact us|https://help.openai.com/> if you need to increase
these storage limits.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createFineTuningJob

Creates a fine-tuning job which begins the process of creating a new
model from a given dataset.

Response includes details of the enqueued job including job status and
the name of the fine-tuned models once complete.

L<Learn more about
fine-tuning|https://platform.openai.com/docs/guides/fine-tuning>

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createImage

Creates an image given a prompt.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createImageEdit

Creates an edited or extended image given an original image and a
prompt.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createImageVariation

Creates a variation of a given image.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createMessage

Create a message.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> to
create a message for.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createModeration

Classifies if text and/or image inputs are potentially harmful. Learn
more in the L<moderation
guide|https://platform.openai.com/docs/guides/moderation>.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createRun

Create a run.

=head3 Parameters


=head4 thread_id

The ID of the thread to run.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 include[]

A list of additional fields to include in the response. Currently the
only supported value is
C<step_details.tool_calls[*].file_search.results[*].content> to fetch
the file search result content.

See the L<file search tool
documentation|https://platform.openai.com/docs/assistants/tools/file-se
arch#customizing-file-search-settings> for more information.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createSpeech

Generates audio from the input text.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createThread

Create a thread.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createThreadAndRun

Create a thread and run it in one request.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createTranscription

Transcribes audio into the input language.
=head3 Examples

See the following files in the distribution for examples:

=over 4

=item *	examples/transcribe-audio.pl

=back


This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createTranslation

Translates audio into English.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createUpload

Creates an intermediate
L<Upload|https://platform.openai.com/docs/api-reference/uploads/object>
object that you can add
L<Parts|https://platform.openai.com/docs/api-reference/uploads/part-obj
ect> to. Currently, an Upload can accept at most 8 GB in total and
expires after an hour after you create it.

Once you complete the Upload, we will create a
L<File|https://platform.openai.com/docs/api-reference/files/object>
object that contains all the parts you uploaded. This File is usable in
the rest of our platform as a regular File object.

For certain C<purpose>s, the correct C<mime_type> must be specified.
Please refer to documentation for the supported MIME types for your use
case:
-
L<Assistants|https://platform.openai.com/docs/assistants/tools/file-sea
rch#supported-files>

For guidance on the proper filename extensions for each purpose, please
follow the documentation on L<creating a
File|https://platform.openai.com/docs/api-reference/files/create>.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createVectorStore

Create a vector store.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createVectorStoreFile

Create a vector store file by attaching a
L<File|https://platform.openai.com/docs/api-reference/files> to a
L<vector
store|https://platform.openai.com/docs/api-reference/vector-stores/obje
ct>.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store for which to create a File.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  vs_abc123

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 createVectorStoreFileBatch

Create a vector store file batch.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store for which to create a File Batch.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  vs_abc123

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 delete-invite

Delete an invite. If the invite has already been accepted, it cannot be
deleted.

=head3 Parameters


=head4 invite_id

The ID of the invite to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 delete-project-api-key

Deletes an API key from the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 key_id

The ID of the API key.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 delete-project-service-account

Deletes a service account from the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 service_account_id

The ID of the service account.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 delete-project-user

Deletes a user from the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 delete-user

Deletes a user from the organization.

=head3 Parameters


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteAssistant

Delete an assistant.

=head3 Parameters


=head4 assistant_id

The ID of the assistant to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteFile

Delete a file.

=head3 Parameters


=head4 file_id

The ID of the file to use for this request.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteMessage

Deletes a message.

=head3 Parameters


=head4 thread_id

The ID of the thread to which this message belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 message_id

The ID of the message to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteModel

Delete a fine-tuned model. You must have the Owner role in your
organization to delete a model.

=head3 Parameters


=head4 model

The model to delete

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  ft:gpt-4o-mini:acemeco:suffix:abc123

=item * Enum:     N/A

=back




=head2 deleteThread

Delete a thread.

=head3 Parameters


=head4 thread_id

The ID of the thread to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteVectorStore

Delete a vector store.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 deleteVectorStoreFile

Delete a vector store file. This will remove the file from the vector
store but the file itself will not be deleted. To delete the file, use
the L<delete
file|https://platform.openai.com/docs/api-reference/files/delete>
endpoint.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the file belongs to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 file_id

The ID of the file to delete.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 downloadFile

Returns the contents of the specified file.

=head3 Parameters


=head4 file_id

The ID of the file to use for this request.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getAssistant

Retrieves an assistant.

=head3 Parameters


=head4 assistant_id

The ID of the assistant to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getMessage

Retrieve a message.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> to
which this message belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 message_id

The ID of the message to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getRun

Retrieves a run.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> that
was run.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getRunStep

Retrieves a run step.

=head3 Parameters


=head4 thread_id

The ID of the thread to which the run and run step belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run to which the run step belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 step_id

The ID of the run step to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 include[]

A list of additional fields to include in the response. Currently the
only supported value is
C<step_details.tool_calls[*].file_search.results[*].content> to fetch
the file search result content.

See the L<file search tool
documentation|https://platform.openai.com/docs/assistants/tools/file-se
arch#customizing-file-search-settings> for more information.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getThread

Retrieves a thread.

=head3 Parameters


=head4 thread_id

The ID of the thread to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getVectorStore

Retrieves a vector store.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 getVectorStoreFile

Retrieves a vector store file.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the file belongs to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  vs_abc123

=item * Enum:     N/A

=back


=head4 file_id

The ID of the file being retrieved.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  file-abc123

=item * Enum:     N/A

=back




=head2 getVectorStoreFileBatch

Retrieves a vector store file batch.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the file batch belongs to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  vs_abc123

=item * Enum:     N/A

=back


=head4 batch_id

The ID of the file batch being retrieved.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  vsfb_abc123

=item * Enum:     N/A

=back




=head2 inviteUser

Create an invite for a user to the organization. The invite must be
accepted by the user before they have access to the organization.

This method does not take any path or URL parameters.


=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 list-audit-logs

List user actions and configuration changes within this organization.

=head3 Parameters


=head4 effective_at

Return only events whose C<effective_at> (Unix seconds) is in this
range.

=over 4

=item * Type:     object

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 project_ids[]

Return only events for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 event_types[]

Return only events with a C<type> in one of these values. For example,
C<project.created>. For all options, see the documentation for the
L<audit log object|https://platform.openai.com/docs/api-reference/audit-logs/object>.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 actor_ids[]

Return only events performed by these actors. Can be a user ID, a
service account ID, or an api key tracking ID.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 actor_emails[]

Return only events performed by users with these emails.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 resource_ids[]

Return only events performed on these targets. For example, a project
ID updated.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-invites

Returns a list of invites in the organization.

=head3 Parameters


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-project-api-keys

Returns a list of API keys in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-project-rate-limits

Returns the rate limits per model for a project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. The default is 100.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  100

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, beginning with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-project-service-accounts

Returns a list of service accounts in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-project-users

Returns a list of users in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-projects

Returns a list of projects.

=head3 Parameters


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 include_archived

If C<true> returns all projects including those that have been
C<archived>. Archived projects are not included by default.

=over 4

=item * Type:     boolean

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 list-users

Lists all of the users in the organization.

=head3 Parameters


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 emails

Filter by the email address of users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listAssistants

Returns a list of assistants.

=head3 Parameters


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listBatches

List your organization's batches.

=head3 Parameters


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listFiles

Returns a list of files.

=head3 Parameters


=head4 purpose

Only return files with the given purpose.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 10,000, and the default is 10,000.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  10000

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listFilesInVectorStoreBatch

Returns a list of vector store files in a batch.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the files belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 batch_id

The ID of the file batch that the files belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 filter

Filter by file status. One of C<in_progress>, C<completed>, C<failed>,
C<cancelled>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     in_progress, completed, failed, cancelled

=back




=head2 listFineTuningEvents

Get status updates for a fine-tuning job.

=head3 Parameters


=head4 fine_tuning_job_id

The ID of the fine-tuning job to get events for.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  ft-AF1WoRqd3aJAHsqc9NY7iL8F

=item * Enum:     N/A

=back


=head4 after

Identifier for the last event from the previous pagination request.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Number of events to retrieve.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listFineTuningJobCheckpoints

List checkpoints for a fine-tuning job.

=head3 Parameters


=head4 fine_tuning_job_id

The ID of the fine-tuning job to get checkpoints for.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  ft-AF1WoRqd3aJAHsqc9NY7iL8F

=item * Enum:     N/A

=back


=head4 after

Identifier for the last checkpoint ID from the previous pagination
request.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Number of checkpoints to retrieve.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  10

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listMessages

Returns a list of messages for a given thread.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> the
messages belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

Filter messages by the run ID that generated them.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listModels

Lists the currently available models, and provides basic information
about each one such as the owner and availability.

This method does not take any path or URL parameters.


=head2 listPaginatedFineTuningJobs

List your organization's fine-tuning jobs

=head3 Parameters


=head4 after

Identifier for the last job from the previous pagination request.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Number of fine-tuning jobs to retrieve.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listRuns

Returns a list of runs belonging to a thread.

=head3 Parameters


=head4 thread_id

The ID of the thread the run belongs to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listRunSteps

Returns a list of run steps belonging to a run.

=head3 Parameters


=head4 thread_id

The ID of the thread the run and run steps belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run the run steps belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 include[]

A list of additional fields to include in the response. Currently the
only supported value is
C<step_details.tool_calls[*].file_search.results[*].content> to fetch
the file search result content.

See the L<file search tool
documentation|https://platform.openai.com/docs/assistants/tools/file-se
arch#customizing-file-search-settings> for more information.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 listVectorStoreFiles

Returns a list of vector store files.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store that the files belong to.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 filter

Filter by file status. One of C<in_progress>, C<completed>, C<failed>,
C<cancelled>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     in_progress, completed, failed, cancelled

=back




=head2 listVectorStores

Returns a list of vector stores.

=head3 Parameters


=head4 limit

A limit on the number of objects to be returned. Limit can range
between 1 and 100, and the default is 20.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  20

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 order

Sort order by the C<created_at> timestamp of the objects. C<asc> for
ascending order and C<desc> for descending order.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  desc

=item * Example:  N/A

=item * Enum:     asc, desc

=back


=head4 after

A cursor for use in pagination. C<after> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, ending with objI<foo, your subsequent call can
include after=obj>foo in order to fetch the next page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 before

A cursor for use in pagination. C<before> is an object ID that defines
your place in the list. For instance, if you make a list request and
receive 100 objects, starting with objI<foo, your subsequent call can
include before=obj>foo in order to fetch the previous page of the list.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 modify-project

Modifies a project in the organization.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modify-project-user

Modifies a user's role in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modify-user

Modifies a user's role in the organization.

=head3 Parameters


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modifyAssistant

Modifies an assistant.

=head3 Parameters


=head4 assistant_id

The ID of the assistant to modify.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modifyMessage

Modifies a message.

=head3 Parameters


=head4 thread_id

The ID of the thread to which this message belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 message_id

The ID of the message to modify.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modifyRun

Modifies a run.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> that
was run.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run to modify.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modifyThread

Modifies a thread.

=head3 Parameters


=head4 thread_id

The ID of the thread to modify. Only the C<metadata> can be modified.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 modifyVectorStore

Modifies a vector store.

=head3 Parameters


=head4 vector_store_id

The ID of the vector store to modify.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 retrieve-invite

Retrieves an invite.

=head3 Parameters


=head4 invite_id

The ID of the invite to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieve-project

Retrieves a project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieve-project-api-key

Retrieves an API key in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 key_id

The ID of the API key.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieve-project-service-account

Retrieves a service account in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 service_account_id

The ID of the service account.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieve-project-user

Retrieves a user in the project.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieve-user

Retrieves a user by their identifier.

=head3 Parameters


=head4 user_id

The ID of the user.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieveBatch

Retrieves a batch.

=head3 Parameters


=head4 batch_id

The ID of the batch to retrieve.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieveFile

Returns information about a specific file.

=head3 Parameters


=head4 file_id

The ID of the file to use for this request.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 retrieveFineTuningJob

Get info about a fine-tuning job.

L<Learn more about
fine-tuning|https://platform.openai.com/docs/guides/fine-tuning>

=head3 Parameters


=head4 fine_tuning_job_id

The ID of the fine-tuning job.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  ft-AF1WoRqd3aJAHsqc9NY7iL8F

=item * Enum:     N/A

=back




=head2 retrieveModel

Retrieves a model instance, providing basic information about the model
such as the owner and permissioning.

=head3 Parameters


=head4 model

The ID of the model to use for this request

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  gpt-4o-mini

=item * Enum:     N/A

=back




=head2 submitToolOuputsToRun

When a run has the C<status: "requires_action"> and
C<required_action.type> is C<submit_tool_outputs>, this endpoint can be
used to submit the outputs from the tool calls once they're all
completed. All outputs must be submitted in a single request.

=head3 Parameters


=head4 thread_id

The ID of the
L<thread|https://platform.openai.com/docs/api-reference/threads> to
which this run belongs.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 run_id

The ID of the run that requires the tool output submission.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 update-project-rate-limits

Updates a project rate limit.

=head3 Parameters


=head4 project_id

The ID of the project.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 rate_limit_id

The ID of the rate limit.

=over 4

=item * Type:     string

=item * In:       path

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head3 Request Body

The request body is complicated. See L<OpenAPI::Client::OpenAI::Path> for details.

=head2 usage-audio-speeches

Get audio speeches usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model> or any combination
of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-audio-transcriptions

Get audio transcriptions usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model> or any combination
of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-code-interpreter-sessions

Get code interpreter sessions usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-completions

Get completions usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 batch

If C<true>, return batch jobs only. If C<false>, return non-batch jobs
only. By default, return both.

=over 4

=item * Type:     boolean

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model>, C<batch> or any
combination of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-costs

Get costs details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently only C<1d> is
supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1d

=back


=head4 project_ids

Return only costs for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the costs by the specified fields. Support fields include
C<project_id>, C<line_item> and any combination of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

A limit on the number of buckets to be returned. Limit can range
between 1 and 180, and the default is 7.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  7

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-embeddings

Get embeddings usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model> or any combination
of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-images

Get images usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 sources

Return only usages for these sources. Possible values are
C<image.generation>, C<image.edit>, C<image.variation> or any
combination of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 sizes

Return only usages for these image sizes. Possible values are
C<256x256>, C<512x512>, C<1024x1024>, C<1792x1792>, C<1024x1792> or any
combination of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model>, C<size>, C<source>
or any combination of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-moderations

Get moderations usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 user_ids

Return only usage for these users.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 api_key_ids

Return only usage for these API keys.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 models

Return only usage for these models.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>, C<user_id>, C<api_key_id>, C<model> or any combination
of them.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head2 usage-vector-stores

Get vector stores usage details for the organization.

=head3 Parameters


=head4 start_time

Start time (Unix seconds) of the query time range, inclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: True

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 end_time

End time (Unix seconds) of the query time range, exclusive.

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 bucket_width

Width of each time bucket in response. Currently C<1m>, C<1h> and C<1d>
are supported, default to C<1d>.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  1d

=item * Example:  N/A

=item * Enum:     1m, 1h, 1d

=back


=head4 project_ids

Return only usage for these projects.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 group_by

Group the usage data by the specified fields. Support fields include
C<project_id>.

=over 4

=item * Type:     array

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 limit

Specifies the number of buckets to return.
- C<bucket_width=1d>: default: 7, max: 31
- C<bucket_width=1h>: default: 24, max: 168
- C<bucket_width=1m>: default: 60, max: 1440

=over 4

=item * Type:     integer

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back


=head4 page

A cursor for use in pagination. Corresponding to the C<next_page> field
from the previous response.

=over 4

=item * Type:     string

=item * In:       query

=item * Required: False

=item * Default:  N/A

=item * Example:  N/A

=item * Enum:     N/A

=back




=head1 COPYRIGHT AND LICENSE

Copyright (C) 2023-2024 by Nelson Ferraz

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.14.0 or,
at your option, any later version of Perl 5 you may have available.

=cut
